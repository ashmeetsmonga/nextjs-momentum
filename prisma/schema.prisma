// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  email    String   @unique
  name     String
  password String
  role     UserRole @default(USER)
  projects Project[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  assignedTasks Task[] @relation(name: "TaskAssignee")
  createdTasks  Task[] @relation(name: "TaskCreator")
}

model Project {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String?
  ownerId     String @db.ObjectId
  owner       User     @relation(fields: [ownerId], references: [id])
  tasks       Task[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Task {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String?
  status      TaskStatus @default(TODO)
  priority    TaskPriority @default(MEDIUM)
  assigneeId  String? @db.ObjectId
  assignee    User?       @relation(name: "TaskAssignee", fields: [assigneeId], references: [id])
  projectId   String @db.ObjectId
  project     Project     @relation(fields: [projectId], references: [id])
  creatorId   String @db.ObjectId
  creator     User        @relation(name: "TaskCreator", fields: [creatorId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum TaskStatus {
  TODO
  IN_PROGRESS
  DONE
  BLOCKED
}

enum TaskPriority {
  LOW
  MEDIUM
  HIGH
  CRITICAL
}

enum UserRole {
  ADMIN
  USER
  MANAGER
}